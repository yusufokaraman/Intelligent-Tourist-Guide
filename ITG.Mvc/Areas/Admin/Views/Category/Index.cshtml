@using ITG.Shared.Utilities.Results.ComplexTypes
@model ITG.Entities.Dtos.CategoryListDto
@{
    Layout = "_Layout";
    ViewBag.Title = "Kategoriler";
}

@if (Model.ResultStatus == ITG.Shared.Utilities.Results.ComplexTypes.ResultStatus.Success)
{

    <div id="modalPlaceHolder" aria-hidden="true"></div>
    <div class="card mb-4 mt-2">
        <div class="card-header">
            <i class="fas fa-table mr-1"></i>
            Kategoriler
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered" id="categoriesTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Adı</th>
                            <th>Açıklama</th>
                            <th>Şehir</th>
                            <th>Aktif Mi?</th>
                            <th>Silinmiş Mi?</th>
                            <th>Not</th>
                            <th>Oluşturulma Tarihi</th>
                            <th>Oluşturan Kullanıcı</th>
                            <th>Son Düzenlenme Tarihi</th>
                            <th>Son Düzenleyen Kullanıcı</th>
                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <th>ID</th>
                            <th>Adı</th>
                            <th>Açıklama</th>
                            <th>Şehir</th>
                            <th>Aktif Mi?</th>
                            <th>Silinmiş Mi?</th>
                            <th>Not</th>
                            <th>Oluşturulma Tarihi</th>
                            <th>Oluşturan Kullanıcı</th>
                            <th>Son Düzenlenme Tarihi</th>
                            <th>Son Düzenleyen Kullanıcı</th>
                        </tr>
                    </tfoot>
                    <tbody>
                        @foreach (var category in Model.Categories)
                        {
                            <tr>
                                <td>@category.Id</td>
                                <td>@category.Name</td>
                                <td>@category.Description</td>
                                <td>@category.CityId</td>
                                <td>@category.IsActive</td>
                                <td>@category.IsDeleted</td>
                                <td>@category.Note</td>
                                <td>@category.CreatedDate.ToShortDateString()</td>
                                <td>@category.CreatedByName</td>
                                <td>@category.ModifiedDate.ToShortDateString()</td>
                                <td>@category.ModifiedByName</td>

                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}
@if (Model.ResultStatus == ITG.Shared.Utilities.Results.ComplexTypes.ResultStatus.Error)
{

    <div class="alert alert-danger mt-3">

        @Model.Message <br />
        Dashboard sayfasına geri dönmek için <a class="alert-link" asp-area="Admin" asp-controller="Home" asp-action="Index">tıklayınız.</a>

    </div>

}
@section Scripts{

    <script>
        $(document).ready(function () {
            $('#categoriesTable').DataTable({

                dom:
                    "<'row'<'col-sm-3'l><'col-sm-6 text-center'B><'col-sm-3'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                buttons: [
                    {
                        text: 'Ekle',
                        attr: {
                            id="btnAdd",
                        },
                        className: 'btn btn-success',
                        action: function (e, dt, node, config) {

                        }
                    },
                    {

                        text: 'Yenile',
                        className: 'btn btn-warning',
                        action: function (e, dt, node, config) {
                            alert('Yenile butonuna basıldı.');
                        }
                    }
                ]

            });
            @* DataTables end here *@
            @* Ajax GET / Getting the _CategoryAddPartial as Modal  Form starts from here *@
            $(function () {
                const url = '@Url.Action("Add","Category")';
                const placeHolderDiv = $('#modalPlaceHolder');
                $('#btnAdd').click(function () {
                    $.get(url).done(function (data) {
                        placeHolderDiv.html(data);
                        placeHolderDiv.find(".modal").modal('show');
                    });

                });
                @* Ajax GET / Getting the _CategoryAddPartial as Modal  Form ends here *@
                @* Ajax POST / Posting the FormData  as CategoryAddDto starts from here  *@
                placeHolderDiv.on('click',
                    '#btnSave',
                    function (event) {
                        event.preventDefault();
                        const form = $('#form-category-add');
                        const actionUrl = form.attr('action');
                        const dataToSend = form.serialize();
                        $.post(actionUrl, dataToSend).done(function (data) {
                            console.log(data);
                            const categoryAddAjaxModel = jQuery.parseJSON(data);
                            console.log(categoryAddAjaxModel);
                            const newFormBody = $('.modal-body', categoryAddAjaxModel.CategoryAddPartial);
                            placeHolderDiv.find('.modal-body').replaceWith(newFormBody);
                            const isValid = newFormBody.find('[name="IsValid"]').val() === 'True';
                            if (isValid) {

                                placeHolderDiv.find('.modal').modal('hide');
                                const newTableRow = `
                             <tr>
                                <td>${categoryAddAjaxModel.CategoryDto.Category.Id}</td>
                                <td>${categoryAddAjaxModel.CategoryDto.Category.Name}</td>
                                <td>${categoryAddAjaxModel.CategoryDto.Category.Description}n</td>
                                <td>${categoryAddAjaxModel.CategoryDto.Category.CityId}</td>
                                <td>${categoryAddAjaxModel.CategoryDto.Category.IsActive}</td>
                                <td>${categoryAddAjaxModel.CategoryDto.Category.IsDeleted}</td>
                                <td>${categoryAddAjaxModel.CategoryDto.Category.Note}</td>
                                <td>${categoryAddAjaxModel.CategoryDto.Category.CreatedDate}</td>
                                <td>${categoryAddAjaxModel.CategoryDto.Category.CreatedByName}</td>
                                <td>${categoryAddAjaxModel.CategoryDto.Category.ModifiedDate}</td>
                                <td>${categoryAddAjaxModel.CategoryDto.Category.ModifiedByName}</td>

                            </tr>  `;
                                const newTableRowObject = $(newTableRow);
                                newTableRowObject.hide();
                                $('#categoriesTable').append(newTableRowObject);
                                newTableRowObject.fadeIn(3500);
                                toastr.success(`${categoryAddAjaxModel.CategoryDto.Message}`, 'Başarılı İşlem!')
                            }
                        });

                });
            });
        });
    </script>


}
